name: LFS and Regular Sync Workflow

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  TARGET_ORG: tsvi-org
  TARGET_REPO: lfs-new
  SERVICE_ACCOUNT_EMAIL: machine@acme.com
  SERVICE_ACCOUNT_NAME: machine

jobs:
  lfs_sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for LFS objects
          lfs: true # Ensure Git LFS files are fetched
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure Git LFS is installed
        run: |
          if ! git lfs; then
            sudo apt-get install git-lfs
            git lfs install
          fi

      - name: Add target repository as a remote
        run: |
          git remote add target git@github.com:${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}.git
          git config --global user.email "${{ env.SERVICE_ACCOUNT_EMAIL }}"
          git config --global user.name "${{ env.SERVICE_ACCOUNT_NAME }}"

      - name: Push LFS objects to the target repository
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          git lfs push --all target $branch_name || {
            echo "Failed to push LFS objects to the target repository."
            exit 1
          }

  regular_sync:
    needs: lfs_sync
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure you're fetching all history for consistency
          lfs: true # This might be necessary if your regular sync relies on LFS objects
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: Add target repository as a remote using SSH
        run: |
          git remote add target git@github.com:${{ env.TARGET_ORG }}/${{ env.TARGET_REPO }}.git
          git config --global user.email "${{ env.SERVICE_ACCOUNT_EMAIL }}"
          git config --global user.name "${{ env.SERVICE_ACCOUNT_NAME }}"
  
      - name: Push changes to the target repository (excluding LFS objects)
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          git push target HEAD:$branch_name || {
            echo "Failed to push commits to the target repository."
            exit 1
          }